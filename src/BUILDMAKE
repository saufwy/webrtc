#edit-mode: -*- python -*-
#coding: UTF-8

# Work root
WORKROOT('../../')

# buildmake bin path
BUILDMAKE_BIN_PATH('~/tools/buildmake/buildmake')

# Using hard link copy.
COPY_USING_HARD_LINK(True)

# C preprocessor params
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')

# C compile params
CFLAGS('-g -pipe -W -Wall -fPIC')

# C++ compile params
CXXFLAGS('-g -pipe -W -Wall -fPIC -std=c++11')

# Include path
INCPATHS('.')

# Using libs
#LIBS('./libsrc.a')

# Default git domain
#DEFAULT_GIT_DOMAIN('https://github.com/')

# Depend libs in git
# Using default git domain
#DEP_CONFIGS('group_name', 'project_name', 'repository')
# Using local git url
#DEP_CONFIGS('group_name', 'project_name', 'https://mygit.com/repository')

# Link params
LDFLAGS('-lpthread -lcrypto -lrt')

# Default include parent dir for headers file
#DEFAULT_LIB_INCLUDE_DIR('src')

user_sources=GLOB('./rtc_base/*.cc')
user_headers=''

# Generate an application 
#Application('src', Sources(user_sources))
# Generate a static library
StaticLibrary('webrtc', Sources(user_sources), HeaderFiles(user_headers))
# Generate a share library
#SharedLibrary('src', Sources(user_sources), HeaderFiles(user_headers))

